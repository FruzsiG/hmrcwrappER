#Check if time window specified
if( is.null(time_window)){
print("You have to specify a time window!")
return()
} else {
filter_crit = time_window
}
#Goods filter is not compulsory
if(!is.null(key_word)){
filter_crit = paste0(filter_crit, " and contains(SITC/",filter_agg,"Desc, '",key_word,"')")
}
#Country filter is not compulsory
if(!is.null(country_filter)){
if(nchar(trimws(country_filter)) == 2){
filter_crit <- paste0(filter_crit, " and Country/CountryCodeAlpha eq '", country_filter, "'")
} else {
print("Please use ISO2-Alpha country code e.g. 'FR'.")
return()
}
}
#flow filter also not compulsory
if(!is.null(flow_filter)){
flow_filter = tolower(flow_filter)
if(flow_filter == "import"){
filter_crit <- paste0(filter_crit, " and (FlowTypeId eq 1 or FlowTYpeId eq 3)")
} else if(flow_filter == "export"){
filter_crit <- paste0(filter_crit, " and (FlowTypeId eq 2 or FlowTYpeId eq 4)")
} else if(flow_filter == "eu"){
filter_crit <- paste0(filter_crit, " and (FlowTypeId eq 1 or FlowTYpeId eq 2)")
} else {
print("Ambiguous flow type please specify 'import', 'export', 'eu' or nothing." )
return()
}
}
#the default is that the grouping only happens by flow
grouping_by = "FlowTypeId"
if(endpoint == "rts"){
grouping_by = "FlowtypeId, GovRegionId"
}
if(!is.null(groupby)){
groupby = tolower(groupby)
if(length(intersect(c("sitc1", "sitc2", "sitc3", "sitc4"), groupby)) > 0){
aggreg = intersect(c("sitc1", "sitc2", "sitc3", "sitc4"), groupby)
grouping_by <- paste0(grouping_by, ", SITC/", aggreg, "Code, SITC/", aggreg ,"Desc")
}
if("country" %in% groupby){
grouping_by <- paste0(grouping_by, ", Country/CountryCodeAlpha")
}
if("year" %in% groupby){
grouping_by <- paste0(grouping_by, ", Date/Year")
}
if("month" %in% groupby){
grouping_by <- paste0(grouping_by, ", Date/MonthId")
}
#grouping_by <- paste0("Commodity/", aggreg, "Code, Commodity/", aggreg ,"Description, Country/CountryCodeAlpha, FlowTypeId")
}
#query <- "?$filter= MonthId gt 202000" # Can leave empty (max 30k rows)
#query <- "?$apply=filter(contains(SITC/SitcDesc, 'wood') and MonthId gt 202000 and MonthId lt 202100)/groupby((SITC/Sitc4Code, SITC/SitcDesc), aggregate(round(Value) with sum as SumValue))"
#query <- "?$apply=filter(contains(Commodity/Hs2Description, 'wood') and MonthId gt 202000 and MonthId lt 202100)/groupby((Commodity/Hs2Code, Commodity/Hs2Description, Country/CountryCodeAlpha), aggregate(round(Value) with sum as SumValue))"
query <- paste0("?$apply=filter(",
filter_crit,")/groupby((",
grouping_by,
"), aggregate(Value with sum as SumValue))&$count=true")
full_url <- paste0(base, endpoint, gsub(" ","%20", query))
message("Your query is : ", full_url)
req <- httr::GET(full_url)
# Extarct content (in json format)
json_content <- httr::content(req, as = "text", encoding = "UTF-8")
# Convert json to dataframe
my_df <- jsonlite::fromJSON(json_content, flatten = TRUE) %>%
data.frame()
df = select(my_df, setdiff(colnames(my_df), "X.odata.nextLink"))
i = 1
while (nrow(my_df) == 30000 & i < 6) {
count = 30000*i
my_url <- paste0(full_url, "&$skip=",count)
i = i+1
req <- httr::GET(my_url)
json_content <- httr::content(req, as = "text", encoding = "UTF-8")
my_df <- jsonlite::fromJSON(json_content, flatten = TRUE) %>%
data.frame() %>%
select(setdiff(colnames(my_df), "X.odata.nextLink"))
if(ncol(my_df) != ncol(df)){
print("Skip 30k does not work for this call (yet). Try to alter your call and loop it")
} else {
df = rbind(df,my_df)
}
}
# Drop call and Recode FlowType
df <- df  %>%
select(-X.odata.context)%>%
mutate(value.FlowTypeId = case_when(value.FlowTypeId == 1 ~ "EU Imports",
value.FlowTypeId == 2 ~ "EU Exports",
value.FlowTypeId == 3 ~ "Non-EU imports",
value.FlowTypeId == 4 ~ "Non-EU Exports"))
#Commented out for now as it slows down bigger requests
#print(htmlTable::htmlTable(df, rnames=FALSE))
return(df)
}
call_hs_hmrc_ots_with_product_code(time_window = "MonthId gt 201906 and MonthId lt 202008", flow_filter = "EXport", groupby = c("HS4", "COUNTRY")) -> x2
source('C:/Users/gajdosf/Department for International Trade/Macro Analysis and Statistics - 14. Data Science Data Exploitation/Projects/HMRC API wrapper/hmrcwrappeR/R/HMRC_API.R', echo=TRUE)
call_hs_hmrc_ots_with_product_code(time_window = "MonthId gt 201906 and MonthId lt 202008", flow_filter = "EXport", groupby = c("HS4", "COUNTRY")) -> x2
call_hs_hmrc_ots_with_product_code(time_window = "MonthId gt 201906 and MonthId lt 202008", flow_filter = "EXport", groupby = c("HS2", "COUNTRY")) -> x2hs2
call_hs_hmrc_ots_with_product_code(time_window = "MonthId gt 201906 and MonthId lt 202008", flow_filter = "EXport", groupby = c("COUNTRY")) -> x2country
call_hs_hmrc_ots_with_product_code(time_window = "MonthId gt 201906 and MonthId lt 202008", flow_filter = "EXport") -> x2total
left_join(x,x2, by = c("X.odata.count", "value..odata.id", "value.FlowTypeId", "value.Country..odata.id", "value.Country.CountryCodeAlpha", "value.Commodity..odata.id", "value.Commodity.Hs4Description", "value.Commodity.Hs4Code")) -> xcomb
View(xcomb)
View(x2)
View(xtotal)
View(x2total)
View(xhs2)
View(x2hs2)
sum(is.na(x2hs2$value.Country..odata.id))
sum(is.na(xhs2$value.Country..odata.id))
sum(is.na(xhs2$value..odata.id))
left_join(x,x2, by = c("X.odata.count", "value.FlowTypeId", "value.Country.CountryCodeAlpha", "value.Commodity.Hs4Description", "value.Commodity.Hs4Code")) -> xcomb
View(xcomb)
x %>% selec(-value..odata.id, -value.Country..odata.id, -value.Commodity..odata.id) -> x
x %>% select(-value..odata.id, -value.Country..odata.id, -value.Commodity..odata.id) -> x
x2 %>% select(-value..odata.id, -value.Country..odata.id, -value.Commodity..odata.id) -> x2
left_join(x,x2, by = c("X.odata.count", "value.FlowTypeId", "value.Country.CountryCodeAlpha", "value.Commodity.Hs4Description", "value.Commodity.Hs4Code")) -> xcomb
View(xcomb)
left_join(x,x2, by = c("value.FlowTypeId", "value.Country.CountryCodeAlpha", "value.Commodity.Hs4Description", "value.Commodity.Hs4Code")) -> xcomb
View(xcomb)
left_join(x,x2, by = c("value.FlowTypeId", "value.Country.CountryCodeAlpha", "value.Commodity.Hs4Description", "value.Commodity.Hs4Code")) %>% mutate(difference = value.SumValue.x - value.SumValue.y)-> xcomb
sum(xcomb$difference)
x2hs2 %>% select(-value..odata.id, -value.Country..odata.id, -value.Commodity..odata.id) -> x2hs2
xhs2 %>% select(-value..odata.id, -value.Country..odata.id, -value.Commodity..odata.id) -> xhs2
View(x2hs2)
View(xhs2)
left_join(xhs2,x2hs2, by = c("value.FlowTypeId", "value.Country.CountryCodeAlpha", "value.Commodity.Hs4Description", "value.Commodity.Hs4Code")) %>% mutate(difference = value.SumValue.x - value.SumValue.y)-> xcombhs2
left_join(xhs2,x2hs2, by = c("value.FlowTypeId", "value.Country.CountryCodeAlpha", "value.Commodity.Hs2Description", "value.Commodity.Hs2Code")) %>% mutate(difference = value.SumValue.x - value.SumValue.y)-> xcombhs2
View(xcombhs2)
sum(xcombhs2$difference)
View(xcomb)
left_join(x2hs2,x2hs, by = c("value.FlowTypeId", "value.Country.CountryCodeAlpha", "value.Commodity.Hs2Description", "value.Commodity.Hs2Code")) %>% mutate(difference = value.SumValue.x - value.SumValue.y)-> xcombhs2
left_join(x2hs2,xhs2, by = c("value.FlowTypeId", "value.Country.CountryCodeAlpha", "value.Commodity.Hs2Description", "value.Commodity.Hs2Code")) %>% mutate(difference = value.SumValue.x - value.SumValue.y)-> xcombhs2
sum(xcombhs2$difference)
View(xhs2)
x2country %>% select(-value..odata.id, -value.Country..odata.id, -value.Commodity..odata.id) -> x2country
x2country %>% select(-value..odata.id, -value.Country..odata.id) -> x2country
xcountry %>% select(-value..odata.id, -value.Country..odata.id) -> xcountry
left_join(x2country,xcountry, by = c("value.FlowTypeId", "value.Country.CountryCodeAlpha")) %>% mutate(difference = value.SumValue.x - value.SumValue.y)-> xcombhs2
left_join(x2country,xcountry, by = c("value.FlowTypeId", "value.Country.CountryCodeAlpha")) %>% mutate(difference = value.SumValue.x - value.SumValue.y)-> xcombcountry
View(xcombcountry)
sum(xcombcountry$value.SumValue.y)
sum(xcombcountry$value.SumValue.y, na.rm = TRUE)
xcomb %>% group_by(value.FlowTypeId) %>% mutate(the_value = sum(value.SumValue.y, na.rm = TRUE))
xcomb %>% group_by(value.FlowTypeId) %>% mutate(the_value = sum(value.SumValue.y, na.rm = TRUE)) -> blab
distinct(blab$the_value)
distinct(as.factor(blab$the_value))
distinct(as.character(blab$the_value))
View(blab)
xcomb %>% group_by(value.FlowTypeId) %>% mutate(the_value = sum(value.SumValue.x, na.rm = TRUE)) -> blab
usethis::use_package_doc()
library("devtools")
library("roxygen2")
document()
install()
library(hmrcwrappeR)
?`hmrcwrappeR-package`
document()
document()
rm(list = c("call_hs_hmrc_ots_with_key_word_search", "call_hs_hmrc_ots_with_product_code", "call_sitc_hmrc_with_key_word_search", "call_sitc_hmrc_with_product_code"))
install()
library(hmrcwrappeR)
?`hmrcwrappeR-package`
?`dplyr-package`
?dplyr
browseVignettes(pacakge = dplyr)
browseVignettes(pacakge = "dplyr")
browseVignettes(package = "dplyr")
document
install()
document
install()
document
install()
document
document()
document()
document()
document()
install()
?`hmrcwrappeR-package`
library(hmrcwrappeR)
?`hmrcwrappeR-package`
?`hmrcwrappeR-package`
?`hmrcwrappeR-package`
?`hmrcwrappeR-package`
?hmrcwrappeR-package
?`hmrcwrappeR-package``
document()
install()
library(hmrcwrappeR)
?`hmrcwrappeR-package``
?`hmrcwrappeR-package`
?`hmrcwrappeR-package`
?`hmrcwrappeR-package`
document()
install()
library(hmrcwrappeR)
?`hmrcwrappeR-package`
document()
install()
?`hmrcwrappeR-package`
document()
install()
library(hmrcwrappeR)
?`hmrcwrappeR-package`
library(devtools)
library(roxygen2)
document()
build()
install()
?`hmrcwrappeR-package`
document()
build()
install()
library(hmrcwrappeR)
document()
build()
install()
library(hmrcwrappeR)
?`hmrcwrappeR-package`
?`hmrcwrappeR-package`
?`hmrcwrappeR-package`
install()
library("devtools")
install()
library(hmrcwrappeR)
?`hmrcwrappeR-package`
ls("package:hmrcwrappeR")
ls("hmrcwrappeR")
library("devtools")
document()
install()
library(hmrcwrappeR)
ls("package:hmrcwrappeR")
?`hmrcwrappeR-package`
library("devtools")
library("roxygen2")
document
document()
install()
?`hmrcwrappeR-package`
library("devtools")
library("roxygen2")
install()
library("devtools")
library("roxygen2")
document()
install()
?`hmrcwrappeR-package`
?`dplyr`
ls("package:hmrcwrappeR")
library("devtools")
library("roxygen2")
document()
install()
library(hmrcwrappeR)
?`hmrcwrappeR-package`
install()
devtools::install()
library("hmrcwrappeR")
library("hmrcwrappeR")
devtools::install()
library(hmrcwrappeR)
call_hs_hmrc_ots_with_product_code(time_window = "MonthId gt 201906 and MonthId lt 202008", flow_filter = "EXport") -> x2total
library(dplyr)
call_hs_hmrc_ots_with_product_code(time_window = "MonthId gt 201906 and MonthId lt 202008", flow_filter = "EXport") -> x2total
library("httr")
library("jsonlite")
call_hs_hmrc_ots_with_product_code(time_window = "MonthId gt 201906 and MonthId lt 202008", flow_filter = "EXport") -> x2total
my_url <- "https://api.uktradeinfo.com/ots?$apply=filter(MonthId%20gt%20201906%20and%20MonthId%20lt%20202008%20and%20and%20CommodityId%20gt%200%20and%20SuppressionIndex%20eq%200%20and%20(FlowTypeId%20eq%202%20or%20FlowTYpeId%20eq%204))/groupby((FlowTypeId),%20aggregate(Value%20with%20sum%20as%20SumValue))&$count=true"
devtools::install()
call_hs_hmrc_ots_with_product_code(time_window = "MonthId gt 201906 and MonthId lt 202008", flow_filter = "EXport") -> x2total
library(hmrcwrappeR)
call_hs_hmrc_ots_with_product_code(time_window = "MonthId gt 201906 and MonthId lt 202008", flow_filter = "EXport") -> x2total
library(dplyr)
call_hs_hmrc_ots_with_product_code(time_window = "MonthId gt 201906 and MonthId lt 202008", flow_filter = "EXport") -> x2total
View(x2total)
?call_sitc_hmrc_with_key_word_search
call_sitc_hmrc_with_key_word_search(key_word = "carrot" filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc4", "COUNTRY"))->x
call_sitc_hmrc_with_key_word_search(key_word = "carrot", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc4", "COUNTRY"))->x
my_url = "https://api.uktradeinfo.com/rts?$apply=filter(MonthId%20eq%20201901%20and%20CommodityId%20gt%200%20and%20SuppressionIndex%20eq%200%20and%20contains(SITC/sitc2Desc,%20'carrot'))/groupby((FlowtypeId,%20GovRegionId,%20SITC/sitc4Code,%20SITC/sitc4Desc,%20Country/CountryCodeAlpha),%20aggregate(Value%20with%20sum%20as%20SumValue))&$count=true"
req <- httr::GET(my_url)
json_content <- httr::content(req, as = "text", encoding = "UTF-8")
json_content
devtools::install()
library("dplyr")
call_sitc_hmrc_with_key_word_search(key_word = "carrot", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc4", "COUNTRY"))->x
library(hmrcwrappeR)
call_sitc_hmrc_with_key_word_search(key_word = "carrot", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc4", "COUNTRY"))->x
call_sitc_hmrc_with_key_word_search(key_word = "carrot", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "ots", groupby = c("sitc4", "COUNTRY"))->x
my_url = "https://api.uktradeinfo.com/ots?$apply=filter(MonthId%20eq%20201901%20and%20CommoditySITCId%20ge%200%20and%20SuppressionIndex%20eq%200%20and%20contains(SITC/sitc2Desc,%20'carrot'))/groupby((FlowTypeId,%20SITC/sitc4Code,%20SITC/sitc4Desc,%20Country/CountryCodeAlpha),%20aggregate(Value%20with%20sum%20as%20SumValue))&$count=true"
req <- httr::GET(my_url)
View(req)
json_content <- httr::content(req, as = "text", encoding = "UTF-8")
my_df <- jsonlite::fromJSON(json_content, flatten = TRUE) %>%
data.frame() %>%
select(setdiff(colnames(my_df), "X.odata.nextLink"))
json_content
my_url = "https://api.uktradeinfo.com/rts?$apply=filter(MonthId%20eq%20201901%20and%20CommoditySITCId%20ge%200%20and%20SuppressionIndex%20eq%200%20and%20contains(SITC/sitc2Desc,%20'carrot'))/groupby((FlowTypeId,%20SITC/sitc4Code,%20SITC/sitc4Desc,%20Country/CountryCodeAlpha),%20aggregate(Value%20with%20sum%20as%20SumValue))&$count=true"
req <- httr::GET(my_url)
json_content <- httr::content(req, as = "text", encoding = "UTF-8")
my_df <- jsonlite::fromJSON(json_content, flatten = TRUE) %>%
data.frame() %>%
select(setdiff(colnames(my_df), "X.odata.nextLink"))
json_content
my_url = "https://api.uktradeinfo.com/ots?$apply=filter(MonthId%20eq%20201901%20and%20CommoditySITCId%20ge%200%20and%20SuppressionIndex%20eq%200%20and%20contains(SITC/sitc2Desc,%20'carrot'))/groupby((FlowTypeId,%20SITC/sitc4Code,%20SITC/sitc4Desc,%20Country/CountryCodeAlpha),%20aggregate(Value%20with%20sum%20as%20SumValue))&$count=true"
req <- httr::GET(my_url)
json_content <- httr::content(req, as = "text", encoding = "UTF-8")
json_content
my_url = "https://api.uktradeinfo.com/ots?$apply=filter(MonthId%20eq%20201901%20and%20SuppressionIndex%20eq%200%20and%20contains(SITC/sitc2Desc,%20'carrot'))/groupby((FlowTypeId,%20SITC/sitc4Code,%20SITC/sitc4Desc,%20Country/CountryCodeAlpha),%20aggregate(Value%20with%20sum%20as%20SumValue))&$count=true"
req <- httr::GET(my_url)
json_content <- httr::content(req, as = "text", encoding = "UTF-8")
json_content
my_url = "https://api.uktradeinfo.com/ots?$apply=filter(MonthId%20eq%20201901%20and%20contains(SITC/sitc2Desc,%20'carrot'))/groupby((FlowTypeId,%20SITC/sitc4Code,%20SITC/sitc4Desc,%20Country/CountryCodeAlpha),%20aggregate(Value%20with%20sum%20as%20SumValue))&$count=true"
req <- httr::GET(my_url)
json_content <- httr::content(req, as = "text", encoding = "UTF-8")
json_content
call_sitc_hmrc_with_key_word_search(filter_agg = "sitc0", time_window = "MonthId gt 201906 and MonthId lt 202008", endpoint = "ots", country_filter = "FR", flow_filter = "EXport", groupby = c("SITc2", "COUNTRY"))
library("devtools")
library("roxygen2")
document()
install.packages("remotes")
intall()
install()
library("devtools")
install()
library("hmrcwrappeR")
?call_hs_hmrc_ots_with_key_word_search
?call_hs_hmrc_ots_with_product_code
?call_sitc_hmrc_with_key_word_search
call_sitc_hmrc_with_key_word_search(key_word = "cheese", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc4", "COUNTRY"))
library(dplyr)
call_sitc_hmrc_with_key_word_search(key_word = "cheese", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc4", "COUNTRY"))
call_sitc_hmrc_with_key_word_search(key_word = "cheese", filter_agg = "sitc4", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc4", "COUNTRY"))
call_sitc_hmrc_with_key_word_search(key_word = "dairy", filter_agg = "sitc4", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc4", "COUNTRY"))
call_sitc_hmrc_with_key_word_search(key_word = "dairy", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc4", "COUNTRY"))
call_sitc_hmrc_with_key_word_search(key_word = "Dairy", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc4", "COUNTRY"))
call_sitc_hmrc_with_key_word_search(key_word = "Dairy", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "ots", groupby = c("sitc4", "COUNTRY"))
call_sitc_hmrc_with_key_word_search(key_word = "Dairy", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "ots", groupby = c("sitc4", "COUNTRY")) ->
x
call_sitc_hmrc_with_key_word_search(key_word = "carrot", filter_agg = "sitc4", time_window = "MonthId eq 201901", endpoint = "ots", groupby = c("sitc4", "COUNTRY")) -> x
call_sitc_hmrc_with_key_word_search(key_word = "cheese", filter_agg = "sitc4", time_window = "MonthId eq 201901", endpoint = "ots", groupby = c("sitc4", "COUNTRY")) -> x
View(x)
call_sitc_hmrc_with_key_word_search(filter_agg = "sitc4", time_window = "MonthId eq 201901", endpoint = "ots", groupby = c("sitc2", "COUNTRY")) -> x
View(x)
call_sitc_hmrc_with_key_word_search(filter_agg = "sitc4", time_window = "MonthId eq 201901", endpoint = "ots", groupby = c("sitc2")) -> x
View(x)
call_sitc_hmrc_with_key_word_search(filter_agg = "sitc4", time_window = "MonthId eq 201901", endpoint = "ots", groupby = c("sitc1")) -> x
View(x)
call_sitc_hmrc_with_key_word_search(filter_agg = "sitc4", time_window = "MonthId gt 202000", endpoint = "ots", groupby = c("sitc1")) -> x
View(x)
call_sitc_hmrc_with_key_word_search(filter_agg = "sitc4", time_window = "MonthId gt 202000", endpoint = "ots") -> x
View(x)
call_sitc_hmrc_with_key_word_search(key_word = "carrot", filter_agg = "sitc4", time_window = "MonthId gt 202000", endpoint = "ots") -> x
call_sitc_hmrc_with_key_word_search(key_word = "carrot", filter_agg = "sitc4", time_window = "MonthId gt 202000", endpoint = "ots", groupby = c("sitc4")) -> x
call_sitc_hmrc_with_key_word_search(key_word = "carrots", filter_agg = "sitc4", time_window = "MonthId gt 202000", endpoint = "ots", groupby = c("sitc4")) -> x
my_url = "https://api.uktradeinfo.com/ots?$apply=filter(MonthId%20gt%20202000%20and%20CommoditySITCId%20ge%200%20and%20SuppressionIndex%20eq%200%20and%20contains(SITC/sitc4Desc,%20'carrot'))/groupby((FlowTypeId,%20SITC/sitc4Code,%20SITC/sitc4Desc),%20aggregate(Value%20with%20sum%20as%20SumValue))&$count=true"
req <- httr::GET(my_url)
json_content <- httr::content(req, as = "text", encoding = "UTF-8")
json_content
my_url = "https://api.uktradeinfo.com/ots?$apply=filter(MonthId%20gt%20202000%20and%20CommoditySITCId%20ge%200%20and%20SuppressionIndex%20eq%200%20and%20contains(SITC/sitc4Desc,%20'Carrot'))/groupby((FlowTypeId,%20SITC/sitc4Code,%20SITC/sitc4Desc),%20aggregate(Value%20with%20sum%20as%20SumValue))&$count=true"
req <- httr::GET(my_url)
json_content <- httr::content(req, as = "text", encoding = "UTF-8")
json_content
my_url = "https://api.uktradeinfo.com/ots?$apply=filter(MonthId%20gt%20202000%20and%20CommoditySITCId%20ge%200%20and%20SuppressionIndex%20eq%200%20and%20contains(SITC/sitc4Desc,%20'Carrots'))/groupby((FlowTypeId,%20SITC/sitc4Code,%20SITC/sitc4Desc),%20aggregate(Value%20with%20sum%20as%20SumValue))&$count=true"
req <- httr::GET(my_url)
json_content <- httr::content(req, as = "text", encoding = "UTF-8")
json_content
call_sitc_hmrc_with_key_word_search(key_word = "veget", filter_agg = "sitc1", time_window = "MonthId gt 202000", endpoint = "ots", groupby = c("sitc4")) -> x
View(x)
call_sitc_hmrc_with_key_word_search(key_word = "carrot", filter_agg = "sitc5", time_window = "MonthId gt 202000", endpoint = "ots", groupby = c("sitc4")) -> x
call_sitc_hmrc_with_key_word_search(filter_agg = "sitc4", time_window = "MonthId gt 202000", endpoint = "ots", groupby = c("sitc4")) -> x
View(x)
call_sitc_hmrc_with_key_word_search(filter_agg = "sitc4", time_window = "MonthId gt 202000", endpoint = "ots", groupby = c("sitc3")) -> x
View(x)
call_sitc_hmrc_with_key_word_search(filter_agg = "sitc4", time_window = "MonthId gt 202000", endpoint = "ots", groupby = c("sitc4")) -> x
View(x)
library("devtools")
library("roxygen2")
getwd()
build()
install()
install()
library(hmrcwrappeR)
?call_hs_hmrc_ots_with_key_word_search
call_sitc_hmrc_with_key_word_search(filter_agg = "sitc4", time_window = "MonthId gt 202000", endpoint = "ots", groupby = c("sitc5")) -> x
library(dplyr)
call_sitc_hmrc_with_key_word_search(filter_agg = "sitc4", time_window = "MonthId gt 202000", endpoint = "ots", groupby = c("sitc5")) -> x
call_sitc_hmrc_with_key_word_search(filter_agg = "sitc4", time_window = "MonthId gt 202000", endpoint = "ots", groupby = c("sitc5")) -> x
call_sitc_hmrc_with_key_word_search(filter_agg = "sitc4", time_window = "MonthId gt 202000", endpoint = "ots", groupby = c("sitc4")) -> x
View(x)
my_url = "https://api.uktradeinfo.com/ots?$apply=filter(MonthId%20gt%20202000%20and%20CommoditySitcId%20ge%200%20and%20SuppressionIndex%20eq%200)/groupby((FlowTypeId,%20SITC/sitc5Code),%20aggregate(Value%20with%20sum%20as%20SumValue))&$count=true"
req <- httr::GET(my_url)
json_content <- httr::content(req, as = "text", encoding = "UTF-8")
library("devtools")
intall()
install()
call_sitc_hmrc_with_key_word_search(filter_agg = "sitc4", time_window = "MonthId gt 202000", endpoint = "ots", groupby = c("sitc4")) -> x
library(hmrcwrappeR)
call_sitc_hmrc_with_key_word_search(filter_agg = "sitc4", time_window = "MonthId gt 202000", endpoint = "ots", groupby = c("sitc4")) -> x
library(dplyr)
call_sitc_hmrc_with_key_word_search(filter_agg = "sitc4", time_window = "MonthId gt 202000", endpoint = "ots", groupby = c("sitc4")) -> x
View(x)
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country"))) -> x
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country")) -> x
library(stringr)
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country")) -> x
library(hmrcwrappeR)
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country"))->x
library(stringr)
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country"))->x
library(dplyr)
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country"))->x
View(x)
library(devtools)
install()
library(hmrcwrappeR)
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country"))
install()
library(devtools)
install()
library(hmrcwrappeR)
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country"))
library(devtools)
install()
library(hmrcwrappeR)
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country"))
library(hmrcwrappeR)
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country"))
library("devtools")
install()
library(hmrcwrappeR)
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country"))
usethis::use_package("dplyr")
usethis::use_package("stringr")
usethis::use_package("jsonlite")
usethis::use_package("httr")
usethis::use_package("dplyr")
usethis::use_package("jsonlite")
usethis::use_package("stringr")
install()
library(hmrcwrappeR)
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country"))
library("devtools")
install()
library(hmrcwrappeR)
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country"))
library("devtools")
install()
library(hmrcwrappeR)
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country"))
library("devtools")
install()
library(hmrcwrappeR)
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country"))
library("devtools")
install()
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country"))
library(hmrcwrappeR)
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country"))
library("devtools")
install()
library(hmrcwrappeR)
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country"))
?call_hs_hmrc_ots_with_product_code
call_hs_hmrc_ots_with_product_code(time_window = "MonthId gt 201906 and MonthId lt 202008", endpoint = "ots", country_filter = "FR", flow_filter = "EXport", groupby = c("HS2", "COUNTRY"))
library("devtools")
library("roxygen2")
document()
install()
library(hmrcwrappeR)
?call_hs_hmrc_ots_with_product_code
call_hs_hmrc_ots_with_product_code(time_window = "MonthId eq 201901", flow_filter = "EU", groupby = c("HS4", "COUNTRY"))
call_hs_hmrc_ots_with_product_code(time_window = "MonthId gt 201906 and MonthId lt 202008", country_filter = "FR", flow_filter = "EXport", groupby = c("HS2", "COUNTRY"))
?call_sitc_hmrc_with_key_word_search
call_sitc_hmrc_with_key_word_search(key_word = "cheese", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc4", "COUNTRY"))
call_sitc_hmrc_with_key_word_search(key_word = "dairy", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc2", "COUNTRY"))
library("devtools")
intall()
install()
library(hmrcwrappeR)
call_sitc_hmrc_with_key_word_search(key_word = "dairy", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc2", "COUNTRY"))
call_sitc_hmrc_with_key_word_search(key_word = "dairy", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc2", "COUNTRY"))
filter_agg = "sitc2"
endpoint = "rts"
!(filter_agg %in% c("sitc1", "sitc2", "sitc3", "sitc4") & endpoint == "ots") | !(filter_agg %in% c("sitc1", "sitc2") & endpoint == "rts")
!(filter_agg %in% c("sitc1", "sitc2", "sitc3", "sitc4") & endpoint == "ots") & !(filter_agg %in% c("sitc1", "sitc2") & endpoint == "rts")
filter_agg = "sitc4"
!(filter_agg %in% c("sitc1", "sitc2", "sitc3", "sitc4") & endpoint == "ots") & !(filter_agg %in% c("sitc1", "sitc2") & endpoint == "rts")
devtools::install()
library(hmrcwrappeR)
call_sitc_hmrc_with_key_word_search(key_word = "dairy", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc2", "COUNTRY"))
call_sitc_hmrc_with_key_word_search(key_word = "dairy", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc4", "COUNTRY"))
call_sitc_hmrc_with_key_word_search(key_word = "dairy", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc4", "COUNTRY")) -> x
View(x)
call_sitc_hmrc_with_key_word_search(key_word = "dairy", filter_agg = "sitc2", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc2", "COUNTRY")) -> x
View(x)
?call_hs_hmrc_ots_with_key_word_search
call_hs_hmrc_ots_with_key_word_search(filter_agg = "cn8", time_window = "MonthId eq 201901", groupby = c("hs4", "country"))
call_hs_hmrc_ots_with_key_word_search(key_word = "cheese", filter_agg = "hs4", time_window = "MonthId gt 201906 and MonthId lt 202008", country_filter = "FR", flow_filter = "EXport", groupby = c("CN8", "COUNTRY"))
?call_sitc_hmrc_with_product_code
call_sitc_hmrc_with_product_code(filter_for_code = "02", time_window = "MonthId eq 201901", endpoint = "rts", groupby = c("sitc4", "COUNTRY"))
call_sitc_hmrc_with_product_code(time_window = "MonthId gt 201906 and MonthId lt 202008", endpoint = "ots", country_filter = "FR", flow_filter = "EXport", groupby = c("SITc2", "COUNTRY"))
install.packages("remotes")
install.packages("remotes")
library(remotes)
install_git('git@gitlab.data.trade.gov.uk:fruzsina.gajdos/hmrc-api-wrapper.git')
